import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump QtGamepad 1.0 ../qml/'

Module {
    Component {
        name: "QGamepad"
        prototype: "QObject"
        exports: ["Gamepad 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "index"; type: "int" }
        Property { name: "connected"; type: "bool"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "axisLeftX"; type: "double"; isReadonly: true }
        Property { name: "axisLeftY"; type: "double"; isReadonly: true }
        Property { name: "axisRightX"; type: "double"; isReadonly: true }
        Property { name: "axisRightY"; type: "double"; isReadonly: true }
        Property { name: "buttonA"; type: "bool"; isReadonly: true }
        Property { name: "buttonB"; type: "bool"; isReadonly: true }
        Property { name: "buttonX"; type: "bool"; isReadonly: true }
        Property { name: "buttonY"; type: "bool"; isReadonly: true }
        Property { name: "buttonL1"; type: "bool"; isReadonly: true }
        Property { name: "buttonR1"; type: "bool"; isReadonly: true }
        Property { name: "buttonL2"; type: "double"; isReadonly: true }
        Property { name: "buttonR2"; type: "double"; isReadonly: true }
        Property { name: "buttonSelect"; type: "bool"; isReadonly: true }
        Property { name: "buttonStart"; type: "bool"; isReadonly: true }
        Property { name: "buttonL3"; type: "bool"; isReadonly: true }
        Property { name: "buttonR3"; type: "bool"; isReadonly: true }
        Property { name: "buttonUp"; type: "bool"; isReadonly: true }
        Property { name: "buttonDown"; type: "bool"; isReadonly: true }
        Property { name: "buttonLeft"; type: "bool"; isReadonly: true }
        Property { name: "buttonRight"; type: "bool"; isReadonly: true }
        Property { name: "buttonGuide"; type: "bool"; isReadonly: true }
        Signal {
            name: "indexChanged"
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "connectedChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "axisLeftXChanged"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "axisLeftYChanged"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "axisRightXChanged"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "axisRightYChanged"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "buttonAChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonBChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonXChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonYChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonL1Changed"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonR1Changed"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonL2Changed"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "buttonR2Changed"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "buttonSelectChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonStartChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonL3Changed"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonR3Changed"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonUpChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonDownChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonLeftChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonRightChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "buttonGuideChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "setIndex"
            Parameter { name: "number"; type: "int" }
        }
    }
}
